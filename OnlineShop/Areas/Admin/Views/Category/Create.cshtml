@model Models.EF.Category
@{
	ViewBag.Title = "Create";
	Layout = "~/Areas/Admin/Views/Shared/_Layouts.cshtml";
}
@section header{
	<span class="label label-success">Thêm mới loại tin tức</span>
}
@section jsFooter{
	<script>
		$('#btnSelectImage').on('click', function (e) {
			e.preventDefault();
			var finder = new CKFinder();
			finder.selectActionFunction = function (url) {
				$('#txtImage').val(url);
			};
			finder.popup();
		})

		var editor = CKEDITOR.replace('txtContent', {
			customConfig: '/assets/admin/js/plugins/ckeditor/config.js',
		});
	</script>
}
<div class="row">
	<div class="col-lg-12">
		<div class="panel panel-default">
			<div class="panel-heading">
				Nhập thông tin loại tin tức
			</div>
			<div class="panel-body">
				<div class="row">
					<div class="col-lg-12">
						@using (Html.BeginForm("Create", "Category", FormMethod.Post))
						{
							@Html.AntiForgeryToken()

							<div class="form-horizontal">
								@Html.ValidationSummary(true, "", new { @class = "text-danger" })

								<div class="form-group">
									@Html.LabelFor(model => model.ParentID, htmlAttributes: new { @class = "control-label col-md-1" })
									<div class="col-md-10">
										@Html.TextBoxFor(model => model.ParentID, new { @class = "form-control" })
										@Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
									</div>
								</div>

								<div class="form-group">
									@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-1" })
									<div class="col-md-10">
										@Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
										@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
									</div>
								</div>



								<div class="form-group">
									@Html.LabelFor(model => model.MetaTitle, htmlAttributes: new { @class = "control-label col-md-1" })
									<div class="col-md-10">
										@Html.TextBoxFor(model => model.MetaTitle, null, new { @class = "form-control" })
										@Html.ValidationMessageFor(model => model.MetaTitle, "", new { @class = "text-danger" })
									</div>
								</div>

								<div class="form-group">
									@Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-1" })
									<div class="col-md-10">
										@Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" }, id = "txtContent" })
										@Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
									</div>
								</div>

								<div class="form-group">
									@Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-1" })
									<div class="col-md-10">
										@Html.EditorFor(model => model.Status, new { @class = "form-control" })
										@Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
									</div>
								</div>
								<div class="form-group">
									<div class="col-md-offset-1 col-md-3">
										<input type="submit" value="Tạo mới" class="btn btn-primary" />
									</div>
								</div>
							</div>
						}
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

